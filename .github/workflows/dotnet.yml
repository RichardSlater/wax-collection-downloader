name: "Publish"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PROJECT_PATH: Scetrov.WaxCollectionDownloader/Scetrov.WaxCollectionDownloader.csproj
  OUTPUT_PATH: Scetrov.WaxCollectionDownloader/bin/Release/net8.0
  ZIP_PATH: dist/
  ZIP_PREFIX: wax-downloader_

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Actions
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Version
        id: "version"
        uses: paulhatch/semantic-version@v5.3.0
        with:
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          change_path: "Scetrov.WaxCollectionDownloader"
          bump_each_commit: true
          search_commit_body: true
          enable_prerelease_mode: false
          debug: false
          version_from_branch: false

      - name: Initialize .Net
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      
      - name: Restore Project
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build and zip outputs
        run: |
          mkdir ${{ env.ZIP_PATH }}
          for rid in "win-x64" "win-arm64" "linux-x64" "linux-arm64" "osx-x64" "osx-arm64"
          do
            dotnet build ${{ env.PROJECT_PATH }} --configuration Release --runtime $rid --no-restore
            zip -r ${{ env.ZIP_PATH }}${{ env.ZIP_PREFIX }}${{ steps.version.outputs.version }}-$rid.zip ${{ env.OUTPUT_PATH }}/$rid > /dev/null
          done
          
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ZIP_PATH }}${{ env.ZIP_PREFIX }}${{ steps.version.outputs.version }}-win-x64.zip
          asset_name: ${{ env.ZIP_PREFIX }}${{ steps.version.outputs.version }}-win-x64.zip
          asset_content_type: application/zip
